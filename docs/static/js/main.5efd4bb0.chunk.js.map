{"version":3,"sources":["components/AddCategoria.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategorias","setcategorias","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","categoria","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categorias","category","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAgB,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAC3B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAe,SAAAS,GAAI,OAAGP,GAAH,mBAAiBO,OACpCN,EAAc,MAMlB,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SAlBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCLlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUH,GAF7C,+DAGCI,MAAMF,GAHP,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KACDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAaZM,GAbY,4CAAH,sDCAPO,EAAc,SAAC,GAAoB,IAAnBJ,EAAkB,EAAlBA,GAAGC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAElC,OADAc,QAAQC,IAAI,CAACN,KAAGC,QAAMV,QAElB,sBAAKgB,UAAU,yCAAf,UACI,qBAAKC,IAAKjB,EAAKkB,IAAKR,IACpB,4BAAIA,QCFHS,EAAU,SAAC,GAAiB,IAAhBrB,EAAe,EAAfA,UAGrB,ECLwB,SAACA,GAEzB,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNe,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAwBD,OApBCC,qBAAU,WACN1B,EAAQC,GAAW0B,MAAK,SAAAC,GAGhBH,EAAS,CACLjB,KAAMoB,EACNL,SAAS,SAKtB,CAACtB,IASEuB,EDrB0BK,CAAa5B,GAAhCa,EAAb,EAAON,KAAce,EAArB,EAAqBA,QAIrB,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAmDlB,IAC7CsB,GAAW,mBAAGJ,UAAU,mCAAb,sBACb,qBAAKA,UAAU,YAAf,SACI,6BAEQL,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEQA,GADCA,EAAIC,eEjBhCkB,EAAe,WAGxB,MAAoC3C,mBAAS,CAAC,gBAA9C,mBAAO4C,EAAP,KAAmB7C,EAAnB,KAKA,OAEI,cADA,CACA,sBACI,8CACA,cAAC,EAAD,CAAeA,cAAeA,IAC9B,uBACA,6BAEQ6C,EAAWrB,KAAI,SAAAsB,GAAQ,OAClB,cAAC,EAAD,CAEG/B,UAAW+B,GADNA,Y,MChBjCC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.5efd4bb0.chunk.js","sourcesContent":["import React,{useState}from \"react\";\r\nimport  PropTypes  from \"prop-types\";\r\n//se recibe setcategorias \r\nexport const AddCategorias = ({setcategorias}) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n    \r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n    //se agrega a la funcion handleSubmit y lo que hace es agregar el valor\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(inputValue.trim().length > 2){\r\n            setcategorias( cats=>[inputValue,...cats] );\r\n            setInputValue('');\r\n        }\r\n        \r\n    }\r\n\r\n    return ( \r\n        <form onSubmit={ handleSubmit }>\r\n            <input\r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange={ handleInputChange }\r\n            ></input>\r\n        </form>\r\n\r\n    )\r\n   \r\n}\r\nAddCategorias.propTypes = {\r\n    setcategorias: PropTypes.func.isRequired\r\n}","\r\n\r\nexport const getGifs = async(categoria) => {\r\n        \r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(categoria)}&api_key=hdNEGjZEdS8ZVecOgxzimTvGnu2rvx9Y&limit=10`;\r\n    const resp  = await fetch(url);\r\n    const {data} = await resp.json();\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n\r\n        }\r\n    })\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id,title,url}) => {\r\n    console.log({id,title,url});\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title}></img>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState,useEffect} from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n//import { getGifs } from '../helpers/getGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({categoria}) => {\r\n    //const [images, setImages] = useState([]);\r\n     \r\n    const {data: images, loading} = useFetchGifs(categoria);\r\n    \r\n    \r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{categoria}</h3>\r\n                { loading && <p className=\"animate__animated animate__flash\">Cargando</p> }\r\n                <div className=\"card-grid\">\r\n                    <ol>\r\n                        {\r\n                            images.map( img =>(\r\n                                <GifGridItem\r\n                                    key={img.id} \r\n                                    {...img}\r\n                                />\r\n                            ))\r\n\r\n                        }\r\n                    </ol>\r\n                </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n","import {useState, useEffect} from 'react';\r\nimport {getGifs} from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = (categoria) => {\r\n   \r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n    useEffect(() => {\r\n        getGifs(categoria).then(imgs => {\r\n            //console.log(imgs);\r\n           // setTimeout( () => {\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n\r\n            //},3000); \r\n        })\r\n    }, [categoria])\r\n    \r\n\r\n    /*setTimeout( () =>{\r\n        setState({\r\n            data: [1,2,3,4,5,6,7],\r\n            loading: false\r\n        });\r\n    }, 3000);*/\r\n   return state; \r\n}\r\n","import React, {useState} from \"react\";\r\nimport { AddCategorias } from \"./components/AddCategoria\";\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    //const categorias = ['One pice','Samurai X','Dragon Ball'];\r\n    const [categorias, setcategorias] = useState(['Dragon Ball']);\r\n    \r\n    //const handleAdd = () => {\r\n    //    setcategorias([...categorias,'Naruto' ]);\r\n    //}\r\n    return (\r\n        /// se utiliza el componente AddCategorias para enviar el objeto setcategorias una vez que se envie lo recibira el compon\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategorias setcategorias={setcategorias}/>\r\n            <hr/>\r\n            <ol>\r\n                {\r\n                    categorias.map(category =>\r\n                        (<GifGrid \r\n                            key={category}\r\n                            categoria={category}\r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {GifExpertApp} from './GifExpertApp'\n\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}